x = df[["CreditScore", "Age", "Tenure", "Balance", "NumOfProducts", "HasCrCard", "IsActiveMember", "EstimatedSalary"]]
y = df["Exited"]
y.value_counts()
sns.countplot(x = y)

from sklearn.preprocessing import StandardScaler
scaler = StandardScaler()
scaledX = scaler.fit_transform(x)
scaledX

from sklearn.model_selection import train_test_split
xTrain, xTest, yTrain, yTest = train_test_split(scaledX, y, random_state=0, test_size=0.25)

from sklearn.neural_network import MLPClassifier
ann = MLPClassifier(hidden_layer_sizes=(100, 100, 100), random_state=0, max_iter=100, activation = "relu")
ann.fit(xTrain, yTrain)

yPred = ann.predict(xTest)

from sklearn.metrics import accuracy_score, ConfusionMatrixDisplay, classification_report

ConfusionMatrixDisplay.from_predictions(yTest, yPred)
accuracy_score(yTest, yPred)
print(classification_report(yTest, yPred))

yRe.value_counts()

xScaled = scaler.fit_transform(xRe)

xTrain, xTest, yTrain, yTest = train_test_split(xScaled, yRe)

ann.fit(xTrain, yTrain)

yPred = ann.predict(xTest)

ConfusionMatrixDisplay.from_predictions(yTest, yPred)
accuracy_score(yTest, yPred)
print(classification_report(yTest, yPred))