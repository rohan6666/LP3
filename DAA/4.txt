def Knapsack(wt, val, cap):
    n = len(wt)
    dp = []

    for i in range(n + 1):
        dp.append([0] * (cap + 1))

    for i in range(1, n + 1):
        for w in range(cap + 1):
            if wt[i - 1] <= w:
                dp[i][w] = max(dp[i - 1][w], dp[i - 1][w - wt[i - 1]] + val[i - 1])
            else:
                dp[i][w] = dp[i - 1][w]
    return dp[n][cap]

if __name__ == "__main__":
    wt = [10, 20, 30]
    val = [60, 100, 120]
    cap = 50

    ans = Knapsack(wt, val, cap)
    print("Max : ", ans)